# Feedback component and ActiveJDBC settings# Database connection settingsdb.driver		org.mariadb.jdbc.Driverdb.conn-str		jdbc:mariadb://localhost:3306/pulsar-feedback-dbdb.username		pulsar-db-userdb.password		pulsar-db-user# Feedback GUI component settings gui.SERVICE_URI_FIELD		_SERVICE_URIgui.RECENT_THRESHOLD		86400000# Feedback management WS queries and settings qry.used-srv-per-user	select used_services.* from used_services where used_services.consumerId = ? and (status='IN-USE' or lastUsedTimestamp >= ?) order by used_services.status, used_services.lastUsedTimestamp descqry.consumer-feedback	select consumer_feedback.* from consumer_feedback where consumer_feedback.consumerId = ? and consumer_feedback.serviceId = ? and consumer_feedback.deleted = 0 order by consumer_feedback.attributeIdqry.service-feedback-notifications	select feedback_notifications.* from feedback_notifications where feedback_notifications.serviceId = ? and feedback_notifications.creationTimestamp >= ? and feedback_notifications.deleted = 0 order by feedback_notifications.attributeId, feedback_notifications.creationTimestamp# Feedback Reporter queries and settingsqry.RECENT_THRESHOLD				86400000qry.MIN_COUNT						1qry.DELETE_PREVIOUS					trueqry.active-feedback-attributes		select distinct attributeId from ( 	select consumer_feedback.attributeId, consumer_feedback.serviceId 	from consumer_feedback, used_services 	where consumer_feedback.deleted = 0 	and consumer_feedback.serviceId=used_services.serviceId 	and (used_services.`status`='IN-USE'  		or used_services.`status`='NOT-USED' and used_services.lastUsedTimestamp >= ? 	) 	group by consumer_feedback.attributeId, consumer_feedback.serviceId 	having count(distinct consumer_feedback.consumerId) >= ? ) xxqry.active-feedback-services		select distinct serviceId   from ( 	select consumer_feedback.attributeId, consumer_feedback.serviceId 	from consumer_feedback, used_services 	where consumer_feedback.deleted = 0 	and consumer_feedback.serviceId=used_services.serviceId 	and (used_services.`status`='IN-USE'  		or used_services.`status`='NOT-USED' and used_services.lastUsedTimestamp >= ? 	) 	group by consumer_feedback.attributeId, consumer_feedback.serviceId 	having count(distinct consumer_feedback.consumerId) >= ? ) xxqry.linguistic-attribute-feedback-statistics	select consumer_feedback.serviceId, case round( AVG( case value %s end ) ) %s else '' end as meanValue from consumer_feedback, used_services where consumer_feedback.serviceId=used_services.serviceId and consumer_feedback.deleted = 0 and consumer_feedback.attributeId = ? and (used_services.`status`='IN-USE' or used_services.`status`='NOT-USED' and used_services.lastUsedTimestamp >= ?) group by consumer_feedback.serviceId having count(*) >= ? qry.fuzzy-attribute-feedback-statistics			select consumer_feedback.serviceId , value, avg( TRIM(SUBSTRING_INDEX(value, ';', 1)) ) lb, avg( TRIM(replace(substring(substring_index(value,';',2), length(substring_index(value,';',2-1)) + 1), ';', '')) ) mv, avg( TRIM(replace(substring(substring_index(value,';',3), length(substring_index(value,';',3-1)) + 1), ';', '')) ) ub, count(*) from consumer_feedback, used_services where consumer_feedback.serviceId=used_services.serviceId and consumer_feedback.deleted = 0 and consumer_feedback.attributeId = ? and (used_services.`status`='IN-USE'  or used_services.`status`='NOT-USED' and used_services.lastUsedTimestamp >= ?) group by consumer_feedback.serviceId having count(*) >= ?#EOF