@Plan:name('impendingFailureMedium')

@Plan:statistics('true')

@Plan:trace('true')

@Import('avgCpuLoadStream:1.0.0')
define stream avgCpuLoadStream (service string, avgCpuLoad double);

@Import('avgMemoryLoadStream:1.0.0')
define stream avgMemoryLoadStream (service string, avgMemoryLoad double);

@Import('avgStorageLoadStream:1.0.0')
define stream avgStorageLoadStream (service string, avgStorageLoad double);

@Import('avgQueryTimeStream:1.0.0')
define stream avgQueryTimeStream (service string, avgQueryTime double);

@Import('processesStream:1.0.0')
define stream processesStream (service string, processes int);

@Import('requestsStream:1.0.0')
define stream requestsStream (service string, requests int);

@Export('impendingFailureMediumStream:1.0.0')
define stream impendingFailureMediumStream (service string, cause string);

from avgCpuLoadStream[avgCpuLoad >= 95]#window.time(15 min) as c
join avgMemoryLoadStream[avgMemoryLoad >= 95 and avgMemoryLoad < 99]#window.time(15 min) as m
on c.service == m.service
select c.service, 'cpuOverload, memoryOverload' as cause
insert into impendingFailureMediumStream;

from avgCpuLoadStream[avgCpuLoad >= 95 and avgCpuLoad < 99]#window.time(15 min) as c
join avgMemoryLoadStream[avgMemoryLoad >= 95]#window.time(15 min) as m
on c.service == m.service
select c.service, 'cpuOverload, memoryOverload' as cause
insert into impendingFailureMediumStream;

from avgCpuLoadStream[avgCpuLoad >= 95]#window.time(15 min) as c
join avgStorageLoadStream[avgStorageLoad >= 95 and avgStorageLoad < 99]#window.time(15 min) as s
on c.service == s.service
select c.service, 'cpuOverload, storageOverload' as cause
insert into impendingFailureMediumStream;

from avgCpuLoadStream[avgCpuLoad >= 95 and avgCpuLoad < 99]#window.time(15 min) as c
join avgStorageLoadStream[avgStorageLoad >= 95]#window.time(15 min) as s
on c.service == s.service
select c.service, 'cpuOverload, storageOverload' as cause
insert into impendingFailureMediumStream;

from avgMemoryLoadStream[avgMemoryLoad >= 95]#window.time(15 min) as m
join avgStorageLoadStream[avgStorageLoad >= 95 and avgStorageLoad < 99]#window.time(15 min) as s
on m.service == s.service
select m.service, 'memoryOverload, storageOverload' as cause
insert into impendingFailureMediumStream;

from avgMemoryLoadStream[avgMemoryLoad >= 95 and avgMemoryLoad < 99]#window.time(15 min) as m
join avgStorageLoadStream[avgStorageLoad >= 95]#window.time(15 min) as s
on m.service == s.service
select m.service, 'memoryOverload, storageOverload' as cause
insert into impendingFailureMediumStream;

from avgQueryTimeStream[avgQueryTime >= 4000 and avgQueryTime < 5000]
select service, 'longQueryTime' as cause
insert into impendingFailureMediumStream;

from processesStream[processes >= 750 and processes < 1000]
select service, 'processOverload' as cause
insert into impendingFailureMediumStream;

from requestsStream[requests >= 750 and requests < 1000]
select service, 'requestOverload' as cause
insert into impendingFailureMediumStream;
