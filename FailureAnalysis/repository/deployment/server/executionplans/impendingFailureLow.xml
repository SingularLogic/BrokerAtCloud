<?xml version="1.0" encoding="UTF-8"?>
<executionPlan name="impendingFailureLow" statistics="enable"
  trace="enable" xmlns="http://wso2.org/carbon/eventprocessor">
  <description/>
  <siddhiConfiguration>
    <property name="siddhi.persistence.snapshot.time.interval.minutes">0</property>
    <property name="siddhi.enable.distributed.processing">false</property>
  </siddhiConfiguration>
  <importedStreams>
    <stream as="avgCpuLoadStream" name="avgCpuLoadStream" version="1.0.0"/>
    <stream as="avgMemoryLoadStream" name="avgMemoryLoadStream" version="1.0.0"/>
    <stream as="avgStorageLoadStream" name="avgStorageLoadStream" version="1.0.0"/>
    <stream as="processesStream" name="processesStream" version="1.0.0"/>
    <stream as="requestsStream" name="requestsStream" version="1.0.0"/>
  </importedStreams>
  <queryExpressions><![CDATA[
from avgCpuLoadStream[avgCpuLoad >= 90] as c
join avgMemoryLoadStream[avgMemoryLoad >= 90 and avgMemoryLoad < 95] as m on c.service == m.service
select c.service, 'cpuOverload, memoryOverload' as cause
insert into impendingFailureLowStream;

from avgCpuLoadStream[avgCpuLoad >= 90 and avgCpuLoad < 95] as c
join avgMemoryLoadStream[avgMemoryLoad >= 90] as m on c.service == m.service
select c.service, 'cpuOverload, memoryOverload' as cause
insert into impendingFailureLowStream;

from avgCpuLoadStream[avgCpuLoad >= 90] as c
join avgStorageLoadStream[avgStorageLoad >= 90 and avgStorageLoad < 95] as s on c.service == s.service
select c.service, 'cpuOverload, storageOverload' as cause
insert into impendingFailureLowStream;

from avgCpuLoadStream[avgCpuLoad >= 90 and avgCpuLoad < 95] as c
join avgStorageLoadStream[avgStorageLoad >= 90] as s on c.service == s.service
select c.service, 'cpuOverload, storageOverload' as cause
insert into impendingFailureLowStream;

from avgMemoryLoadStream[avgMemoryLoad >= 90] as m
join avgStorageLoadStream[avgStorageLoad >= 90 and avgStorageLoad < 95] as s on m.service == s.service
select m.service, 'memoryOverload, storageOverload' as cause
insert into impendingFailureLowStream;

from avgMemoryLoadStream[avgMemoryLoad >= 90 and avgMemoryLoad < 95] as m
join avgStorageLoadStream[avgStorageLoad >= 90] as s on m.service == s.service
select m.service, 'memoryOverload, storageOverload' as cause
insert into impendingFailureLowStream;

from processesStream[processes >= 500 and processes < 750]
select service, 'processesOverload' as cause
insert into impendingFailureLowStream;

from requestsStream[requests >= 500 and requests < 750]
select service, 'requestsOverload' as cause
insert into impendingFailureLowStream;
  ]]></queryExpressions>
  <exportedStreams>
    <stream name="impendingFailureLowStream"
      valueOf="impendingFailureLowStream" version="1.0.0"/>
  </exportedStreams>
</executionPlan>
